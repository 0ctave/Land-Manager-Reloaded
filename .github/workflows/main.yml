name: Publish on GitHub, CurseForge & Modrinth    #The name of your GitHub Action on github.com
 
on: [ pull_request, workflow_dispatch ]           #When your GitHub Action will be executed ('pull_request' -> on every Merge(/Pull) Request; 'workflow_dispatch' -> allows manual execution through github.com

env:                                              #Environment variables that can later be referenced using ${{ env.MINECRAFT_VERSION }}. These are useful for repeating information and allow for quick changes for new mod updates
  JAVA_VERSION: 8
  CURSEFORGE_TOKEN: ${{ secrets.PUBLISH_CURSE_TOKEN }}
  MODRINTH_TOKEN: ${{ secrets.PUBLISH_MODRINTH_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.PUBLISH_GITHUB_TOKEN }}    
  
permissions:
  contents: write

jobs:                                             #The place where you actually tell the GitHub server what to do. 
  build:                                          #To publish your mod you only need one 'job', here it is called 'build'.
    runs-on: ubuntu-latest                        #'runs-on' specifies the operation system (linux).
    steps:                                        #Under 'steps' you will list all the individual commands, such as MC-Publish by Kir-Antipov.
      - name: Check Environment Variables
        run: env

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: "temurin"
          java-version: 8

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.4.2

      - name: Make Gradle Wrapper Executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        run: ./gradlew clean build


      - name: Get Version
        run: |
          echo "::setOutput name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printVersionName)"
        id: get_version

      - name: Set version
        run: |
          echo "Setting version to ${{steps.get_version.outputs.VERSION_NAME}}"
          echo "VERSION=${{steps.get_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
          env | grep VERSION
          echo "Using version $VERSION"
      - name: Get MC Version
        run: |
          echo "::setOutput name=VERSION_NAME::$(${{github.workspace}}/gradlew -q printMCVersionName)"
        id: get_mc_version

      - name: Set MC version
        run: |
            echo "Setting version to ${{steps.get_mc_version.outputs.VERSION_NAME}}"
            echo "MC_VERSION=${{steps.get_mc_version.outputs.VERSION_NAME}}" >> $GITHUB_ENV
            env | grep MC_VERSION
            echo "Using version $MC_VERSION"  

      - name: Publish (CurseForge/Modrinth/GitHub)
        uses: Kir-Antipov/mc-publish@v3.3                                   #The specified MC-Publish GitHub Action in the version 3.2
        with:
          curseforge-id: 927015                                             #The id of your CurseForge project
          curseforge-token: "${{env.CURSEFORGE_TOKEN}}"
        
          modrinth-id: Gc9bAz4n                                             #The id of your modrinth project
          modrinth-token: "${{env.MODRINTH_TOKEN}}"
          
          github-tag: "v${{env.VERSION}}"
          github-token: "${{env.GITHUB_TOKEN}}"

          name: "Land Manager Reloaded ${{env.VERSION}} for ${{env.MC_VERSION}}"
          version: "${{env.VERSION}}"
          version-type: release
          changelog-file: CHANGELOG.md                                      #The file in which the changes of your new update are specified (the path starts at your project root)

          loaders: forge
          game-versions: "${{env.MC_VERSION}}"
          java: "${{env.JAVA_VERSION}}"

          dependencies: |
            kotlin-for-forge
