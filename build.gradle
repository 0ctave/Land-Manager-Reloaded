buildscript {
    repositories {
        //maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' } // Add this line

    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: '1.6.10'
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

//apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'org.parchmentmc.librarian.forgegradle'

// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'

version = "${project.mc_version}-${project.mod_version}"
group = project.base_package // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = project.mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.
compileKotlin { kotlinOptions { jvmTarget = "1.8" } }

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    //mappings channel: "official", version: "1.16.5"

    mappings channel: 'parchment', version: '2022.03.06-1.16.5'

    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"
            //arg "-mixin.config=iceandfire.mixins.json"

            workingDirectory project.file('run')

            jvmArg "-XX:+AllowEnhancedClassRedefinition"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'lmr'

            mods {
                landmanagerreloaded {
                    source sourceSets.main
                }
            }
        }

        server {
            properties 'mixin.env.remapRefMap': 'true'
            property 'mixin.env.refMapRemappingFile', "${project.projectDir}/build/createSrgToMcp/output.srg"

            workingDirectory project.file('run')

            jvmArg "-XX:+AllowEnhancedClassRedefinition"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'landmanagerreloaded'
            mods {
                lmr {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "lmr.refmap.json"
    config 'lmr.mixins.json'
}
// I

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'kotlinforforge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url 'https://www.cursemaven.com'

        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = 'tterrag maven'
        url = 'https://maven.tterrag.com/'
    }

}

dependencies {

    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'


    implementation "thedarkcolour:kotlinforforge:${project.kotlinforforge_version}"
    implementation 'org.jetbrains.kotlin:kotlin-reflect'



    // Mod Dependencies
    implementation fg.deobf("curse.maven:citadel-331936:3441028")

    compileOnly fg.deobf("curse.maven:ice-and-fire-dragons-264231:4614457")



    implementation fg.deobf("curse.maven:effortless-building-302113:4332451")

    implementation fg.deobf("curse.maven:hole-filler-mod-440585:3362158")

    implementation fg.deobf("curse.maven:autoreglib-250363:3326041")
    implementation fg.deobf("curse.maven:quark-243121:3642325")


    implementation fg.deobf("curse.maven:selene-499980:3517008")
    implementation fg.deobf("curse.maven:supplementaries-412082:4802243")

    implementation fg.deobf("curse.maven:mantle-74924:3631982")
    implementation fg.deobf("curse.maven:tinkers-construct-74072:3695126")

    implementation fg.deobf("curse.maven:born-in-chaos-686437:4030231")


    implementation fg.deobf("com.jozufozu.flywheel:Flywheel:1.16-0.2.5.53")
    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.16.5-1.0.10")
    implementation fg.deobf("com.simibubi.create:Create:mc1.16.5_v0.3.2g+483")


}


jar {
    manifest {
        attributes([
                "Specification-Title"     : project.name,
                "Specification-Vendor"    : "octave",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "octave",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "lmr.mixins.json"

        ])
    }
}

jar.finalizedBy('reobfJar')


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}